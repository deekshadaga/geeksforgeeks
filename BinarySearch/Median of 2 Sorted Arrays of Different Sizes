double MedianOfArrays(vector<int>& array1, vector<int>& array2)
    {
        int n1=array1.size();
        int n2=array2.size();
        
        if(n1>n2) 
            return MedianOfArrays(array2,array1); 
            
        int left = (n1+n2+1)/2;
        int low=0,high=n1,n=n1+n2;
        
        while(low<=high){
            
            int mid1 = low+high >> 1;
            int mid2 = left-mid1;
            
            int l1 = INT_MIN,l2=INT_MIN,r1=INT_MAX,r2=INT_MAX;
            if(mid1<n1) r1 = array1[mid1];
            if(mid2<n2) r2 = array2[mid2];
            if(mid1-1 >=0) l1 = array1[mid1-1];
            if(mid2-1 >=0) l2 = array2[mid2-1];
            
            if(l1<=r2 && l2<=r1){
                if(n%2==0){
                    return (double) (max(l1,l2) + min(r1,r2)) /2.0;
                }
                else{
                    return max(l1,l2);
                }
            }
            else if(l1>r2){
                high = mid1-1;
            }
            else{
                low = mid1+1;
            }
        }
        return 0;
    }
