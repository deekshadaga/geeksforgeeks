class Solution{
    public:
    bool power_5(string s){
        int n =s.length();
        //base conditions
        if(n==0 || s[0] == '0')
            return 0;
            
        long long p = 1;
        long long num =0;
        
        //get number from binary string
        for (int i=n-1;i>=0;i--){
            num += (s[i]-'0')*p;
            p *=2;
        }
        //check if it is power of 5       
        long long i=1;
        while(i<=num){
            if(i==num){
                return 1;}
          i *= 5;  
        }
        
        return 0;
    }
    
    int cuts(string s){
        int n = s.size();
        if(s[0]=='0' || s[n-1] == '0'){
            return -1;
        }
        vector<long long> dp(n+1,INT_MAX);
        dp[n]=0;
        for(int i=n-1;i>=0;i--){
            for(int j=i;j<n;j++){
                string str=s.substr(i,j+1-i);
                if(power_5(str)){
                    dp[i] = min(dp[i],1+dp[j+1]);
                }
            }
        }
        return (dp[0] == INT_MAX)? -1:dp[0];
        
    }
};
