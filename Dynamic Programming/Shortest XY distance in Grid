//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function Template for C++

class Solution {
  public:
    int shortestXYDist(vector<vector<char>> grid, int N, int M) {
        vector<vector<int>> dp (N,vector<int> (M,10e9));
        int mini =1000000009;
        for(int i=0;i<N;i++){
            for(int j=0;j<M;j++){
                if(grid[i][j] == 'X'){
                    dp[i][j] = 0;
                }
                else{
                    int minDist = 1000000009;
                    if(i>0)
                        minDist = min(minDist, dp[i-1][j]);
                    if(i<N-1)
                        minDist = min(minDist, dp[i+1][j]);
                    if(j>0)
                        minDist = min(minDist, dp[i][j-1]);
                    if(j<M-1)
                        minDist = min(minDist, dp[i][j+1]);
                    dp[i][j] = minDist+1;
                    if(grid[i][j] == 'Y'){
                        mini = min(mini,dp[i][j]);
                    }
                }
            }
        }
        for(int i=N-1;i>=0;i--){
            for(int j=M-1;j>=0;j--){
                if(grid[i][j] == 'X'){
                    dp[i][j] = 0;
                }
                else{
                    int minDist = 1000000009;
                    if(i>0)
                        minDist = min(minDist, dp[i-1][j]);
                    if(i<N-1)
                        minDist = min(minDist, dp[i+1][j]);
                    if(j>0)
                        minDist = min(minDist, dp[i][j-1]);
                    if(j<M-1)
                        minDist = min(minDist, dp[i][j+1]);
                    dp[i][j] = minDist+1;
                    if(grid[i][j] == 'Y'){
                        mini = min(mini,dp[i][j]);
                    }
                }
            }
        }
        return mini;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int N, M;
        char ch;
        cin >> N >> M;

        vector<vector<char>> grid;

        for (int i = 0; i < N; i++) {
            vector<char> col;
            for (int i = 0; i < M; i++) {
                cin >> ch;
                col.push_back(ch);
            }
            grid.push_back(col);
        }

        Solution ob;
        cout << ob.shortestXYDist(grid, N, M) << endl;
    
cout << "~" << "\n";
}
    return 0;
}
// } Driver Code Ends
