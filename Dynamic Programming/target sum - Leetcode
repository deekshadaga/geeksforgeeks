class Solution {
public:
    int findTargetSumWays(vector<int>& nums, int target) {
        int sum =0,countzero=0;
        int n=nums.size();
        for(int i=0;i<n;i++){
            sum+=nums[i];
            if(nums[i]==0) countzero++; //as cases for zero will be multiplied in last
        }
        if(target>sum) return 0;
        sum=sum+target;
        if(sum%2!=0) return 0;
        sum/=2;
        int t[n+1][sum+1];
        for(int i=0;i<=n;i++){
            for(int j=0;j<=sum;j++){
                if(i==0) t[i][j]=0;
                if(j==0) t[i][j]=1;
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<=sum;j++){
                if(nums[i-1]<=j && nums[i-1]!=0)
                    t[i][j]=t[i-1][j] + t[i-1][j-nums[i-1]];
                else
                    t[i][j]=t[i-1][j];
            }
        }
        return t[n][sum]*pow(2,countzero);
    }
};
