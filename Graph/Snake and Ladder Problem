class Solution{
public:
    int minThrow(int N, int arr[]){
        // code here
        vector<int> board(31,-1);
        
        for(int i=0; i<(2*N-1); i+=2)
        {
            board[arr[i]] = arr[i+1];
        }
       
       queue<pair<int,int>> q;
       q.push({1,0});
       
       vector<bool> visited(31, false);
       
       while(q.empty()==false)
       {
           auto it = q.front();
           q.pop();
           
           int curr_sq = it.first;
           int moves = it.second;
           
           if(curr_sq==30)
           {
               return moves;
           }
           
           for(int i=1; i<=6; i++)
           {
               int next_sq = curr_sq+i;
               
               if(next_sq>30)
               {
                   break;
               }
               
               if(board[next_sq]!=-1)
               {
                   next_sq = board[next_sq];
               }
               
               if(visited[next_sq]==false)
               {
                   q.push({next_sq, moves+1});
                   visited[next_sq] = true;
               }
           }
       }
    }
};
