int solve(vector<int> &arr,int l,int r, vector<vector<int>> &dp){
        if(l>r) return 0;
        if(dp[l][r]!=-1) return dp[l][r];
        int takeLeft = arr[l] + min(solve(arr,l+1,r-1,dp), solve(arr,l+2,r,dp));
        int takeRight = arr[r] + min(solve(arr,l+1,r-1,dp), solve(arr,l,r-2,dp));
        return dp[l][r] = max(takeLeft,takeRight);
    }
    int maxCoins(vector<int>&A,int n)
    {
	    vector<vector<int>> dp(n,vector<int>(n,-1));
	    return solve(A,0,n-1,dp);
    }
};
